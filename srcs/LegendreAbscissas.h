#ifndef LEGENDREABSCISSAS_H_
#define LEGENDREABSCISSAS_H_

/**
 * A place to store the abscissas (and weights) for the Legendre
 * polynomials. Generated using maple to 20 digit precision.
 */
namespace LegendreAbscissas {

  /**
   * Abscissas for rank 20.
   */
  const double l20[40] = {
    -.99312859918509492479, -.96397192727791379127,
    -.91223442825132590587, -.83911697182221882339,
    -.74633190646015079261, -.63605368072651502545,
    -.51086700195082709800, -.37370608871541956067,
    -.22778585114164507808, -0.76526521133497333755e-1,
    0.76526521133497333755e-1, .22778585114164507808,
    .37370608871541956067, .51086700195082709800,
    .63605368072651502545, .74633190646015079261,
    .83911697182221882339, .91223442825132590587,
    .96397192727791379127, .99312859918509492479,
    // Now the weights.
    0.17614007139152118312e-1, 0.40601429800386941331e-1,
    0.62672048334109063569e-1, 0.83276741576704748725e-1,
    .10193011981724043504, .11819453196151841731,
    .13168863844917662690, .14209610931838205133,
    .14917298647260374679, .15275338713072585070,
    .15275338713072585070, .14917298647260374679,
    .14209610931838205133, .13168863844917662690,
    .11819453196151841731, .10193011981724043504,
    0.83276741576704748725e-1, 0.62672048334109063570e-1,
    0.40601429800386941331e-1, 0.17614007139152118312e-1};

  /**
   * Abscissas for rank 12.
   */
  const double l12[24] =
  {-.98156063424671925069, -.90411725637047485668, -.76990267419430468704, -.58731795428661744730, -.36783149899818019375, -.12523340851146891547, .12523340851146891547, .36783149899818019375, .58731795428661744730, .76990267419430468704, .90411725637047485668, .98156063424671925069, 0.47175336386511825406e-1, .10693932599531841634, .16007832854334620809, .20316742672306569061, .23349253653835484825, .24914704581340259756, .24914704581340277905, .23349253653835482213, .20316742672306593553, .16007832854334619808, .10693932599531841044, 0.47175336386511828372e-1};

  /**
   * Abscissas for rank 11.
   */
  const double l11[22] =
  {-.97822865814605699280, -.88706259976809529907, -.73015200557404932409, -.51909612920681181593, -.26954315595234497233, 0., .26954315595234497233, .51909612920681181593, .73015200557404932409, .88706259976809529907, .97822865814605699280, 0.55668567116173659821e-1, .12558036946490460935, .18629021092773422398, .23319376459199047845, .26280454451024665924, .27292508677790062211, .26280454451024665750, .23319376459199046774, .18629021092773424938, .12558036946490462321, 0.55668567116173666888e-1};

  /**
   * Abscissas for rank 10.
   */
  const double l10[20] =
  {-.97390652851717172008, -.86506336668898451073, -.67940956829902440623, -.43339539412924719080, -.14887433898163121088, .14887433898163121088, .43339539412924719080, .67940956829902440623, .86506336668898451073, .97390652851717172008, 0.66671344308688141476e-1, .14945134915058060523, .21908636251598205693, .26926671930999635914, .29552422471475287378, .29552422471475287932, .26926671930999635055, .21908636251598203762, .14945134915058059436, 0.66671344308688138439e-1};

  /**
   * Abscissas for rank 9.
   */
  const double l9[18] =
  {-.96816023950762608984, -.83603110732663579430, -.61337143270059039731, -.32425342340380892904, 0., .32425342340380892904, .61337143270059039731, .83603110732663579430, .96816023950762608984, 0.81274388361574411566e-1, .18064816069485740369, .26061069640293545605, .31234707704000283766, .33023935500125976766, .31234707704000284098, .26061069640293546245, .18064816069485740412, 0.81274388361574411937e-1};

  /**
   * Abscissas for rank 8.
   */
  const double l8[16] =
  {-.96028985649753623168, -.79666647741362673959, -.52553240991632898582, -.18343464249564980494, .18343464249564980494, .52553240991632898582, .79666647741362673959, .96028985649753623168, .10122853629037626198, .22238103445337447116, .31370664587788728838, .36268378337836198164, .36268378337836198349, .31370664587788728757, .22238103445337447098, .10122853629037625924};

  /**
   * Abscissas for rank 7.
   */
  const double l7[14] =
  { -.94910791234275852453, -.74153118559939443986, -.40584515137739716691, 0., .40584515137739716691, .74153118559939443986, .94910791234275852453, .12948496616886969304, .27970539148927666785, .38183005050511894530, .41795918367346938870, .38183005050511894470, .27970539148927666788, .12948496616886969325};

  /**
   * Abscissas for rank 6.
   */
  const double l6[12] =
  {
        -.93246951420315202781, -.66120938646626451366,
        -.23861918608319690863, .23861918608319690863,
        .66120938646626451366, .93246951420315202781,
        .17132449237917034513, .36076157304813860846,
        .46791393457269104698, .46791393457269104752,
        .36076157304813860751, .17132449237917034507};

  /**
   * Abscissas for rank 5.
   */
  const double l5[10] =
  {
         -.90617984593866399280, -.53846931010568309104,
         0.,                    .53846931010568309104,
         .90617984593866399280, .23692688505618908751,
         .47862867049936646804, .56888888888888888889,
         .47862867049936646804, .23692688505618908751};

  /**
   * Function that encapsulates the existence of the chosen number of
   * abscissas.
   * \param N The desired number of collocation points.
   * \retval The abscissas and weights, or 0 if they do not exist.
   */
  const double * getAbscissas(int N) {
    if (N == 20) {
      return LegendreAbscissas::l20;
    } else if (N == 12) {
      return LegendreAbscissas::l12;
    } else if (N == 11) {
      return LegendreAbscissas::l11;
    } else if (N == 10) {
      return LegendreAbscissas::l10;
    } else if (N == 9) {
      return LegendreAbscissas::l9;
    } else if (N == 8) {
      return LegendreAbscissas::l8;
    } else if (N == 7) {
      return LegendreAbscissas::l7;
    } else if (N == 6) {
      return LegendreAbscissas::l6;
    } else if (N == 5) {
      return LegendreAbscissas::l5;
    } else {
      return 0;
    }
  }
}
#endif
